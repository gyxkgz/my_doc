RTC全名实时时钟，用来记录真实世界的时间，包括年月日时分秒。不过，实际不会每一个单位一个寄存器，而是统一转换成秒，存储在一个32位的寄存器中。

gd32vf103的RTC 电路分属于两个电源域：备份域和 VDD 电源域。 位于备份域中的 RTC 电路，包含一个 32 位的累加计数器、一个闹钟、一个预分频器、一个分频器以及 RTC 时钟配置寄存器，这意味着当系统复位或者从待机模式唤醒时，RTC 的设置和时间都保持不变。位于 VDD 电源域的 RTC 电路只包括 APB 接口以及一组控制寄存器。
下图中灰色部分就是备份域，这部分区域除了主动使用命令复位备份域或者掉电，其他情况下能够保持其值而不被清零。


使用RTC需要进行如下的配置：
1、打开PMU（电源管理单元）时钟和备份域时钟；
2、备份域写使能；
3、rtc时钟源选择和rtc时钟使能；
4、rtc寄存器配置；
5、中断服务程序编写；
6、读取寄存器获取时间。

1、打开PMU（电源管理单元）时钟和备份域时钟

想要访问备份域寄存器和rtc寄存器，必须使能电源和备份接口时钟。寄存器是APB1使能寄存器 (RCU_APB1EN) ，bit27打开备份域时钟，bit28开启电源时钟。
代码如下：

2、备份域写使能

复位之后，任何对备份域寄存器的写访问都将被禁止。如需对备份域寄存器做写访问，需先使能备份域写。寄存器是控制寄存器 (PMU_CTL) ，bit8使能备份域写操作。

使能后才能对备份域内的寄存器进行修改。

3、rtc时钟源选择和rtc时钟使能

这部分的配置位于RCU下的备份域控制寄存器 (RCU_BDCTL) 。

这里提到了我们第二步使能备份域操作。bit15使能rtc时钟，bit[9:8]选择时钟源，我这里选择外部的CK_LXTAL时钟作为RTC的时钟源，所以需要同时置位bit0使能LXTAL时钟。

rtc常常使用32.768k的晶振，这样得到的时间比较精准。

4、rtc寄存器配置

在rtc寄存器配置中，首先等待寄存器同步，手册中是这样说的。

同步完成后我使能了所有的中断，寄存器是RTC 中断使能寄存器 (RTC_INTEN)，大家可以根据需要打开。

在写寄存器之前，要查看一下上一次的写操作是否完成，还要进入配置模式。手册是这样说的：

以上三个操作都在寄存器RTC 控制寄存器 (RTC_CTL) 中完成，bit5指示上次对rtc寄存器的写操作是否完成，bit4进入或退出配置模式，bit3指示是否同步。

进入配置模式后，可以对rtc的预分频寄存器、rtc计数寄存器、rtc闹钟寄存器进行配置，它们都分别由高位和低位寄存器组成。具体代码如下所示。

这里设置预分频是32767，SC_CLK 的频率是 RTCCLK 的频率除以(PSC[19:0]+1) ，最终将时钟频率32768分频，而晶振刚好是32768hz，所以最后SC_CLK是1Hz。
闹钟大家根据自己的需要设置，这里用5举例。计数寄存器使用默认的0，没有写东西。
实际使用需要将当前日期和时间转换成秒写入计数寄存器，闹钟要将未来时间作同样的处理。
最后要记得退出配置模式，等待写操作完成。

5、中断服务程序编写
中断服务程序如下所示：

if判断是什么中断，然后清除标志，执行对应的操作。

6、读取寄存器获取时间
主程序可以读取计数寄存器的值来获取当前时间，也可以通过中断服务程序的标志来执行对应的操作。这里简单打印它们的值。

通过打印信息可以验证我们的设置都是ok的。


