输入捕获是处理器很有用的功能，它可以捕获信号，获取信号的周期、占空比等等。它是基于定时器的一个功能，使用它需要作如下的配置：
1、配置定时器；
2、通道配置；
3、打开中断和比较捕获功能；
4、打开定时器；
5、编写中断服务程序；

定时器的配置在上一篇文章已经介绍过了，大家可以查看那篇文章。这里配置比较简单，包括预分频、计数方向、对齐模式、自动重载值。
这里108分频后为1Mhz，65535大概是65.5ms。捕获的信号必须小于这个时间，否则就溢出了。如果被捕获的信号周期比这个大的，就要增大预分频系数了。

首先对输入捕获通道进行滤波设置，寄存器是通道控制寄存器0 (TIMERx_CHCTL0) ，它的各个位在输入或输出时作用有的不同。bit[7:4]是通道0输入滤波，bit[15:12]是通道1输入滤波。这里设置采样频率等于定时器分频后的时钟频率，N=2。

下面配置信号的极性，寄存器是通道控制寄存器2 (TIMERx_CHCTL2) ，bit1决定通道0是上升沿还是下降沿，bit5决定通道1。之后需要配置通道的模式，同样是在通道控制器0 (TIMERx_CHCTL0) 中配置，bit[1:0]是通道0，bit[9:8]是通道1。

这里通道0的模式配置为输入，将IS0映射在CI0上。与此类似将通道1配置为下降沿触发，通道1的模式配置为输入，将IS1映射在CI0上。至于为什么这么配置后边就明白了。这里可以看到，同一个输入信号可以以不一样的触发方式同时配置到两个通道上。

代码如下：

接下来打开通道0和1的捕获中断。寄存器是DMA 和中断使能寄存器 (TIMERx_DMAINTEN) ，bit1是通道0，bit2是通道1。
上面都配置好后要打开两个通道的比较捕获功能，寄存器是通道控制寄存器 2 (TIMERx_CHCTL2) ，bit0是通道0，bit4是通道1。

代码如下：

使能计数器，初始化工作就基本完成了。

最后需要编写中断处理程序，程序里需要清除中断标志、获取捕获寄存器的值、产生软件更新事件。代码如下所示：

代码中让通道0的上升沿产生更新事件，所以通道0得到的就是信号的周期，通道1统计的是上升沿到下降沿的时间，得到的是高电平的时间，这样通过这两个寄存器的值就可以算出周期和占空比。

测试实验
这里我使用pwm发生器产生一个50hz，占空比50%的方波。得到的通道0的值是19873左右，通道1是9936左右。我们的时钟是1Mhz，所以得到的方波周期大概为19.873ms，占空比是49.9%，考虑到误差，与发生器设定的很接近。

ok，关于输入捕获就介绍到这里了，希望对大家有所帮助，我们下期讲一下pwm输出。
