GD32VF103提供了128k的片上flash存储器，可以存放代码和数据，页大小为1kB，所以有128个页。闪存控制器（FMC）提供了片上闪存需要的所有功能，包括页擦除、整片擦除、32位或16位编程闪存、读保护和擦除编程保护等操作。


1、读闪存
闪存可以直接寻址访问，下面的代码直接打印一个页的内容，一次打印32位数据，所以闪存地址要按照4为基数增长。

2、解锁寄存器
复位后，FMC_CTL寄存器进入锁定状态，FMC_CTL寄存器中的LK位被置为1。通过先后向 FMC_KEY寄存器写入0x45670123和0xCDEF89AB，可以使得FMC_CTL寄存器解锁。两次写操作后，FMC_CTL寄存器的LK位被硬件清0。

这里一定要加volatile关键字，不然编译器会优化这里的代码，导致前一个赋值语句被优化没了。
3、页擦除
FMC的页擦除功能将一个主闪存存储页的所有字节初始化为0xFF。每一页都可以被独立擦 除，而不影响其他页内容。页擦除的操作流程如图所示。
首先保证解锁，然后查看状态寄存器的BUSY位是否为1，为1表示正在操作，要等待当前操作完成才能进行下一步。将控制寄存器的PER（bit1）位置位，表示页擦除命令。向地址寄存器填入要擦除的页的地址。置位控制寄存器的START（bit6）开始擦除操作。
检查busy位是否完成操作，完成后清除控制寄存器的PER位。

4、编程（写操作）
FMC提供了一个32位整字/16位半字编程功能，用来修改主存储闪存块内容。
编程操作同样需要解锁状态，然后检查busy位，保证没有正在执行的操作。将控制寄存器的PG(bit0)位置位，表示编程命令。向指定的地址写入数据。查看busy位直到操作完成。最后清除PG位。
32位编程，地址指针要使用uint32_t *强制转换，16位的使用uint16_t *强转。

以上就是128k闪存的基本操作，通过上面的操作我们就可以把程序运行过程中的数据保存下来，比如一些参数或者一些配置信息。下次上电可以读取这些数据。

芯片除了128k的主闪存，还提供了18k的信息块和16B的选项字节块。信息块保存了引导装载程序，只可以读取不可以写。选项字节块可以进行一系列的配置，这些内容在基本功能介绍完后再详细介绍。